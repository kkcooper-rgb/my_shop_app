<template>
 
    <view class="scroll-view-container">
      <!-- 左侧的滚动视图区域 -->
      <scroll-view class="left-scroll-view" scroll-y="true" :style="{height: wh + 'px'}">
        <block v-for="(item, i) in cateList" :key="i">
          <view :class="['left-scroll-view-item', i === active ? 'active' : '']" @click="activeChanged(i)"><text :class="['left-scroll-view-item', i === active ? 'active' : '']">{{item.cat_name}}</text></view>
        </block>
      </scroll-view>
      <!-- 右侧的滚动视图区域 -->
      <scroll-view class="right-scroll-view" scroll-y="true" :style="{height: wh + 'px'}">
        <view class="cate-lv2" v-for="(item2, i2) in cateLevel2" :key="i2" >
          <view ><text class="cate-lv2-title">/ {{item2.cat_name}} /</text></view>
          <!-- 动态渲染三级分类的列表数据 -->
          <view class="cate-lv3-list">
            <!-- 三级分类 Item 项 -->
            <view class="cate-lv3-item" v-for="(item3, i3) in item2.children" :key="i3" @click="handleToDetail(item3)">
              <!-- 图片 -->
              <image class="image_goods" :src="item3.cat_icon"></image>
              <!-- 文本 -->
              <text class="text_name">{{item3.cat_name}}</text>
            </view>
          </view>
        </view>
      </scroll-view>
    </view>
  
</template>

<script>
	import api from "@/config/api.js";
	import {request} from "@/utils/util.js";
	import badgeMix from '@/mixins/tabbar-badge.js'
	export default {
		mixins: [badgeMix],
		data() {
			return {
				// 分类数据列表
				cateList: [],
				cateLevel2:[],
				wh: 0,
				active: 0
			}
		},
		onLoad() {
		  // 获取当前系统的信息
		  const sysInfo = uni.getSystemInfoSync()
		  // 为 wh 窗口可用高度动态赋值
		  this.wh = sysInfo.windowHeight
			this.getCategories()
		},
		methods: {
			getCategories(){
				request(api.getCategories).then(res=>{
					console.log(res);
					this.cateList = res.data.message
					this.cateLevel2 = this.cateList[0].children
				})
			},
			activeChanged(i) {
				this.active = i
				this.cateLevel2 = this.cateList[i].children
			  },
			handleToDetail(v){
				uni.setStorageSync('goods_id',v.cat_id)
				uni.navigateTo({
					url: '/pagesSub/goods_detail/goods_detail?goods_id=' + v.cat_id
				})
			}
		}
	}
</script>

<style lang="less" scoped>
	.scroll-view-container {
	  display: flex;
	flex-direction: row;
	.right-scroll-view{
		width: 500rpx;
		white-space: nowrap;
	}
	  .left-scroll-view {
	    width: 120px;
		white-space: nowrap;
	
	    .left-scroll-view-item {
	      line-height: 60px;
	      background-color: #f7f7f7;
	      text-align: center;
	      font-size: 12px;
	
	      // 激活项的样式
	      &.active {
	        background-color: #ffffff;
	        position: relative;
	
	        // 渲染激活项左侧的红色指示边线
	        &::before {
	          content: ' ';
	          display: block;
	          width: 3px;
	          height: 30px;
	          background-color: #c00000;
	          position: absolute;
	          left: 0;
	          top: 50%;
	          transform: translateY(-50%);
	        }
	      }
	    }
	  }
	}
	.cate-lv2-title {
	  font-size: 12px;
	  font-weight: bold;
	  text-align: center;
	  padding: 15px 0;
	}
	.cate-lv3-list {
	  display: flex;
	  flex-direction: row;
	  flex-wrap: wrap;
		width: 500rpx;
	  .cate-lv3-item {
	    width: 160rpx;
	    margin-bottom: 10px;
	    display: flex;
	    flex-direction: column;
	    align-items: center;
	
	    .image_goods {
	      width: 60px;
	      height: 60px;
	    }
	
	    .text_name {
	      font-size: 12px;
	    }
	  }
	}
</style>
