<template>
	<view class="">
		<my-address></my-address>
		<!-- 购物车商品列表的标题区域 -->
		<view class="cart-title">
			<!-- 左侧的图标 -->
			<uni-icons type="shop" size="18"></uni-icons>
			<!-- 描述文本 -->
			<text class="cart-title-text">购物车</text>
		</view>
		<!-- 商品列表区域 -->
		<uni-swipe-action>
			<uni-swipe-action-item v-for="(goods, i) in cart" :key="i" :right-options="options" @click="swipeActionClickHandler(goods)">
				<my-goods :goods="goods" :show-radio="true" :show-num="true"></my-goods>
			</uni-swipe-action-item>
		</uni-swipe-action>
	</view>
</template>

<script>
	import badgeMix from '@/mixins/tabbar-badge.js'
	import MyGoods from "@/compontents/my-goods.nvue"
	import MyAddress from "@/compontents/my-address.nvue"
	import {
		mapState,
		mapMutations
	} from 'vuex'
	export default {
		mixins: [badgeMix],
		data() {
			return {
				options: [{
					text: '删除', // 显示的文本内容
					style: {
						backgroundColor: '#C00000' // 按钮的背景颜色
					}
				}]
			};
		},
		components: {
			'my-goods': MyGoods,
			'my-address':MyAddress
		},
		computed: {
			// 将 m_cart 模块中的 cart 数组映射到当前页面中使用
			...mapState('m_cart', ['cart']),
		},
		methods: {
			...mapMutations('m_cart', ['updateGoodsState','updateGoodsCount','removeGoodsById']),
			// 商品的勾选状态发生了变化
			swipeActionClickHandler(goods){
				this.removeGoodsById(goods.goods_id)
				this.setBadge()
			}
		}
	}
</script>

<style lang="scss">
	.cart-title {
		height: 40px;
		display: flex;
		align-items: center;
		font-size: 14px;
		padding-left: 5px;
		border-bottom: 1px solid #efefef;

		.cart-title-text {
			margin-left: 10px;
		}
	}
	.goods-item {
	  // 让 goods-item 项占满整个屏幕的宽度
	  width: 750rpx;
	  // 设置盒模型为 border-box
	  box-sizing: border-box;
	  display: flex;
	  padding: 10px 5px;
	  border-bottom: 1px solid #f0f0f0;
	}
</style>
