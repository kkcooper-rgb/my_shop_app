<template>
	<view class="goods-item">
		<!-- 商品左侧图片区域 -->
		<view class="goods-item-left">
			<!-- 存储在购物车中的商品，包含 goods_state 属性，表示商品的勾选状态 -->
			<radio :checked="goods.goods_state" color="#C00000" v-if="showRadio" @click="radioClickHandler"></radio>
			<image :src="goods.goods_small_logo || defaultPic" class="goods-pic"></image>
		</view>
		<view class="goods-item-right">
			<view class="goods-info-box">
				<!-- 商品价格 -->
				<view><text class="goods-price">￥{{goods.goods_price | tofixed}}</text></view>
				<!-- 商品数量 -->
				<uni-number-box :min="1" :value="goods.goods_count" @change="numChangeHandler" v-if="showNum">
				</uni-number-box>
			</view>
		</view>
	</view>
</template>

<script>
	import badgeMix from '@/mixins/tabbar-badge.js'
	import {
		mapMutations
	} from 'vuex'
	export default {
		mixins: [badgeMix],
		// 定义 props 属性，用来接收外界传递到当前组件的数据
		props: {
			// 商品的信息对象
			goods: {
				type: Object,
				default: {},
			},
			// 是否展示图片左侧的 radio
			showRadio: {
				type: Boolean,
				// 如果外界没有指定 show-radio 属性的值，则默认不展示 radio 组件
				default: false,
			},
			// 是否展示价格右侧的 NumberBox 组件
			showNum: {
				type: Boolean,
				default: false,
			},
		},
		data() {
			return {
				defaultPic: ''
			}
		},
		filters:{
			tofixed(val){
				return val.toFixed(2)
			}
		},
		methods: {
			...mapMutations('m_cart', ['updateGoodsState','updateGoodsCount']),
			radioClickHandler() {
				this.updateGoodsState({
					// 商品的 Id
					goods_id: this.goods.goods_id,
					// 商品最新的勾选状态
					goods_state: !this.goods.goods_state
				})
			},
			numChangeHandler(val) {
				this.updateGoodsCount({
					// 商品的 Id
					goods_id: this.goods.goods_id,
					// 商品的最新数量
					goods_count: +val
				})
				this.setBadge()
			}
		}
	}
</script>

<style lang="scss">
	.goods-item {
		display: flex;
		flex-direction: row;
	}

	.goods-item-left {
		margin-right: 5px;
		display: flex;
		flex-direction: row;
		justify-content: space-between;
		align-items: center;

		.goods-pic {
			width: 100px;
			height: 100px;
			display: block;
		}
	}

	.goods-item-right {
		display: flex;
		flex-direction: row;
		flex: 1;
		flex-direction: column;
		justify-content: space-between;

		.goods-name {
			font-size: 13px;
		}

		.goods-info-box {
			display: flex;
			flex-direction: row;
			align-items: center;
			justify-content: space-between;
		}

		.goods-price {
			font-size: 16px;
			color: #c00000;
		}
	}
</style>
