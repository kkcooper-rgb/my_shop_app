<template>
	<!-- 最外层的容器 -->
	<view class="my-settle-container">
		<!-- 全选区域 -->
		<label class="radio" @click="changeAllState">
			<radio color="#C00000" :checked="isFullCheck" /><text>全选</text>
		</label>

		<!-- 合计区域 -->
		<view class="amount-box">
			<text>合计:</text>
			<text class="amount">￥{{checkedGoodsAmount}}</text>
		</view>

		<!-- 结算按钮 -->
		<view ><text class="btn-settle">结算({{checkedCount}})</text></view>
	</view>
</template>

<script>
	import {
		mapGetters,
		mapMutations
	} from 'vuex'
	export default {
		data() {
			return {}
		},
		computed: {
			...mapGetters('m_cart', ['checkedCount', 'total','checkedGoodsAmount']),
			// 2. 是否全选
			isFullCheck() {
				return this.total === this.checkedCount
			},
		},
		methods: {
			// 2. 使用 mapMutations 辅助函数，把 m_cart 模块提供的 updateAllGoodsState 方法映射到当前组件中使用
			...mapMutations('m_cart', ['updateAllGoodsState']),
			changeAllState() {
				// 修改购物车中所有商品的选中状态
				// !this.isFullCheck 表示：当前全选按钮的状态取反之后，就是最新的勾选状态
				this.updateAllGoodsState(!this.isFullCheck)
			}
		},
	}
</script>

<style lang="scss">
	.my-settle-container {
		position: fixed;
		bottom: 0;
		left: 0;
		width: 750rpx;
		height: 100rpx;
		// 将背景色从 cyan 改为 white
		background-color: white;
		display: flex;
		flex-direction: row;
		justify-content: space-between;
		align-items: center;
		padding-left: 10rpx;
		font-size: 28rpx;
		.amount-box{
			display: flex;
			flex-direction: row;
		}

		.radio {
			display: flex;
			flex-direction: row;
			align-items: center;
		}

		.amount {
			color: #c00000;
		}

		.btn-settle {
			height: 100rpx;
			min-width: 200rpx;
			background-color: #c00000;
			color: white;
			line-height: 100rpx;
			text-align: center;
			padding: 0 20rpx;
		}
	}
</style>
